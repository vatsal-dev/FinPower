{"ast":null,"code":"import { useContext } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { DndContext } from '../core';\n/**\r\n * A hook to retrieve the DragDropManager from Context\r\n */\n\nexport function useDragDropManager() {\n  var _useContext = useContext(DndContext),\n    dragDropManager = _useContext.dragDropManager;\n  invariant(dragDropManager != null, 'Expected drag drop context');\n  return dragDropManager;\n}","map":{"version":3,"names":["useContext","invariant","DndContext","useDragDropManager","_useContext","dragDropManager"],"sources":["E:/Github Repos/expense-tracker/expense-tracker/node_modules/react-dnd/dist/esm/hooks/useDragDropManager.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { invariant } from '@react-dnd/invariant';\r\nimport { DndContext } from '../core';\r\n/**\r\n * A hook to retrieve the DragDropManager from Context\r\n */\r\n\r\nexport function useDragDropManager() {\r\n  var _useContext = useContext(DndContext),\r\n      dragDropManager = _useContext.dragDropManager;\r\n\r\n  invariant(dragDropManager != null, 'Expected drag drop context');\r\n  return dragDropManager;\r\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,UAAU,QAAQ,SAAS;AACpC;AACA;AACA;;AAEA,OAAO,SAASC,kBAAkB,GAAG;EACnC,IAAIC,WAAW,GAAGJ,UAAU,CAACE,UAAU,CAAC;IACpCG,eAAe,GAAGD,WAAW,CAACC,eAAe;EAEjDJ,SAAS,CAACI,eAAe,IAAI,IAAI,EAAE,4BAA4B,CAAC;EAChE,OAAOA,eAAe;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}